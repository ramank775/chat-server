# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

s3:
  bucket:
  secretAccesskey:
  accessKeyId:

firebase:
  projectId:
  adminCredentialPath:

topic:
  connectionState:
  sendMessage:
  ack:
  systemMessage:
  offlineMessage:
  login:

# Services configuration

nginx:
  enabled: true
  configPath:

gateway:
  enabled: true

fileMs:
  enabled: true
  storageType: s3
  uploadDir: /
  urlExpiryTime: 3600
  metadataDBType: mongo

deliveryMs:
  enabled: true
  cacheType: redis
  redis: redis:6379
  dbType: mongo

profileMs:
  enabled: true
  authProvider: firebase
  authDBType: mongo
  profileDBType: mongo

groupMs:
  enabled: true
  dbType: mongo

messageRouter:
  enabled: true

notificationMs:
  enabled: true
  dbType: mongo
  pushNotificationProvider: firebase
  pushNotificationTTL: 86400
  offlineMessagePrefix: persistence-message
