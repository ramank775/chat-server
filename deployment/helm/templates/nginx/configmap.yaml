apiVersion: v1
kind: ConfigMap
metadata:
  name: "nginxConfig"
data:
  nginx.conf: |
  {{- if .Values.nginx.configPath -}}
  {{ .Files.Get .Values.nginx.configPath }}
  {{- else -}}
# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
  worker_connections 1024;
}

http {
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;

  sendfile            on;
  tcp_nopush          on;
  tcp_nodelay         on;
  keepalive_timeout   65;
  types_hash_max_size 2048;

  include             /etc/nginx/mime.types;
  default_type        application/octet-stream;

  # Load modular configuration files from the /etc/nginx/conf.d directory.
  # See http://nginx.org/en/docs/ngx_core_module.html#include
  # for more information.
  include /etc/nginx/conf.d/*.conf;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  upstream connection_gateway {
    server gateway:8000;
  }
  {{- if .Values.profileMs.enabled -}}
  upstream profile_ms {
    server profile:4000;
  }
  {{- end -}}
  {{- if .Values.fileMs.enabled -}}
  upstream asset_ms {
    server file:4001;
  }
  {{- end -}}
  {{- if .Values.groupMs.enabled  -}}
  upstream group_ms {
    server group:4002;
  }
  {{- end -}}

  server {
    listen       80 default_server;
    listen       [::]:80 default_server;
    server_name  _;
    root         /usr/share/nginx/html;

    # Load configuration files for the default server block.
    include /etc/nginx/default.d/*.conf;

    location /auth {
      internal;
      {{- if .Values.profileMs.enabled -}}
      proxy_pass http://profile_ms;
      proxy_pass_request_body off;
      proxy_set_header Content-Length "";
      proxy_set_header X-Original-URI $request_uri;
      {{ else }}
      return 200 "OK";
      {{- end -}}
    }

    rewrite /v1.0/(.*) /$1;
    
    location /healthz {
      return 200 "OK";
    }

    location /wss/ {
      auth_request /auth;
      auth_request_set $auth_status $upstream_status;

      rewrite /wss/(.*) /$1 break;
      proxy_pass http://connection_gateway;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
    }

    location /messages {
      auth_request /auth;
      auth_request_set $auth_status $upstream_status;
      proxy_pass http://connection_gateway;
    }
    {{- if .Values.profileMs.enabled -}}
    location /login {
      proxy_pass http://profile_ms;
    }

    location ~ /profile/(.*) {
      auth_request /auth;
      auth_request_set $auth_status $upstream_status;

      rewrite /profile/(.*) /$1 break;
      proxy_pass http://profile_ms;
    }

    location ~ /contactbook/(.*) {
      auth_request /auth;
      auth_request_set $auth_status $upstream_status;

      rewrite /v1.0/(.*) /$1 break;
      proxy_pass http://profile_ms;
    }
    {{- end -}}
    {{- if .Values.groupMs.enabled -}}
    location ~ ^/group/(.*) {
      auth_request /auth;
      auth_request_set $auth_status $upstream_status;

      add_header X-match-uri "/group";
      add_header X-uri $1;

      rewrite ^/group/(.*) /$1 break;
      proxy_pass http://group_ms;
    }
    location ~ /groups/(.*) {
      auth_request /auth;
      auth_request_set $auth_status $upstream_status;

      add_header X-match-uri "/group";
      add_header X-uri $1;

      rewrite /groups/(.*) /$1 break;
      proxy_pass http://group_ms;
    }
    {{- end -}}
    {{- if .Values.fileMs.enabled -}}
    location ~ ^/file/(.*) {
      auth_request /auth;
      auth_request_set $auth_status $upstream_status;
      
      add_header X-match-uri "/file";
      add_header X-uri $1;
      rewrite ^/file/(.*) /$1 break;
      proxy_pass http://asset_ms;
    }
    location ~ /assets/(.*) {
      auth_request /auth;
      auth_request_set $auth_status $upstream_status;
      
      add_header X-match-uri "/assets";
      add_header X-uri $1;
      rewrite /assets/(.*) /$1 break;
      proxy_pass http://asset_ms;
    }
    {{- end -}}

    error_page 404 /404.html;
      location = /40x.html {
    }

    error_page 500 502 503 504 /50x.html;
      location = /50x.html {
    }
  }
}

  {{- end -}}
