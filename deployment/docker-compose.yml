version: "3.9"

services:
  nginx:
    image: nginx:stable
    volumes:
      - ${CONFIG_DIR}/nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  ws-gateway:
    image: ramank775/chatserver:${CHAT_SERVER_TAG}
    entrypoint: node
    command: /app/services/connection-gateway/gateway.js --host=0.0.0.0 --app-name=ws-gateway --gateway-name=ws-gateway-1 --new-message-topic=${TOPIC_NEW_MESSAGE} --client-ack-topic=${TOPIC_CLIENT_ACK_MESSAGE} --offline-message-topic=${TOPIC_OFFLINE_MESSAGE} --event-store=${EVENT_STORE} --kafka-client-id=${GATEWAY_CLIENT_ID:-gateway-1} --kafka-consumer-group=${CONSUMER_GROUP_GATEWAY} --kafka-broker-list='${BROKER_LIST}' --kafka-security-protocol=${KAFKA_SECURITY_PROTOCOL} --kafka-sasl-username=${KAFKA_SASL_USERNAME} --kafka-sasl-password=${KAFKA_SASL_PASSWORD} --nats-server-list=${NATS_SERVER_LIST} --nats-auth-type=${NATS_AUTH} --nats-auth-user=${NATS_USER} --nats-auth-pass=${NATS_PASS} --nats-auth-token=${NATS_AUTH_TOKEN} --nats-auth-nkey=${NATS_NKEY} --nats-auth-jwt=${NATS_USER_JWT} --redis-endpoint=${REDIS_ENDPOINT}

  message-delivery:
    image: ramank775/chatserver:${CHAT_SERVER_TAG}
    volumes:
      - '${CONFIG_DIR}/discovery_service/services.json:/app/discovery_service.json'
    entrypoint: node
    command: /app/services/message-delivery/message-delivery-ms.js --app-name=message-delivery --new-message-topic=${TOPIC_NEW_MESSAGE} --offline-message-topic=${TOPIC_OFFLINE_MESSAGE} --event-store=${EVENT_STORE} --kafka-client-id=${MESSAGE_DELIVERY_CLIENT_ID:-message-delivery-1} --kafka-consumer-group=${CONSUMER_GROUP_MESSAGE_DELIVERY} --kafka-broker-list=${BROKER_LIST} --kafka-security-protocol=${KAFKA_SECURITY_PROTOCOL} --kafka-sasl-username=${KAFKA_SASL_USERNAME} --kafka-sasl-password=${KAFKA_SASL_PASSWORD} --nats-server-list=${NATS_SERVER_LIST} --nats-auth-type=${NATS_AUTH} --nats-auth-user=${NATS_USER} --nats-auth-pass=${NATS_PASS} --nats-auth-token=${NATS_AUTH_TOKEN} --nats-auth-nkey=${NATS_NKEY} --nats-auth-jwt=${NATS_USER_JWT} --nats-consumer-group=${CONSUMER_GROUP_MESSAGE_DELIVERY} --redis-endpoint=${REDIS_ENDPOINT} --channel-ms-endpoint=http://channel:4002

  message:
    image: ramank775/chatserver:${CHAT_SERVER_TAG}
    entrypoint: node
    command: /app/services/message-ms/message-ms.js --host=0.0.0.0 --port=4003 --app-name=message-ms --gateway-name=message-ms-1 --new-message-topic=${TOPIC_NEW_MESSAGE} --offline-message-topic=${TOPIC_OFFLINE_MESSAGE} --event-store=${EVENT_STORE} --kafka-client-id=${MESSAGE_ROUTER_CLIENT_ID:-message-ms-1} --kafka-broker-list=${BROKER_LIST} --kafka-security-protocol=${KAFKA_SECURITY_PROTOCOL} --kafka-sasl-username=${KAFKA_SASL_USERNAME} --kafka-sasl-password=${KAFKA_SASL_PASSWORD} --nats-server-list=${NATS_SERVER_LIST} --nats-auth-type=${NATS_AUTH} --nats-auth-user=${NATS_USER} --nats-auth-pass=${NATS_PASS} --nats-auth-token=${NATS_AUTH_TOKEN} --nats-auth-nkey=${NATS_NKEY} --nats-auth-jwt=${NATS_USER_JWT} --message-db=mongo --mongo-url=${MONGO_URL} --mongo-user=${MONGO_USER} --mongo-password=${MONGO_PASSWORD} --mongo-auth 

  message-storage:
    image: ramank775/chatserver:${CHAT_SERVER_TAG}
    entrypoint: node
    command: /app/services/message-ms/message-storage-worker.js --app-name=message-storage-worker --new-message-topic=${TOPIC_NEW_MESSAGE} --client-ack-topic=${TOPIC_CLIENT_ACK_MESSAGE} --event-store=${EVENT_STORE} --kafka-client-id=${MESSAGE_STORAGE_CLIENT_ID:-message-storage-worker-1} --kafka-consumer-group=${CONSUMER_GROUP_MESSAGE_STORAGE} --kafka-broker-list=${BROKER_LIST} --kafka-security-protocol=${KAFKA_SECURITY_PROTOCOL} --kafka-sasl-username=${KAFKA_SASL_USERNAME} --kafka-sasl-password=${KAFKA_SASL_PASSWORD} --nats-server-list=${NATS_SERVER_LIST} --nats-auth-type=${NATS_AUTH} --nats-auth-user=${NATS_USER} --nats-auth-pass=${NATS_PASS} --nats-auth-token=${NATS_AUTH_TOKEN} --nats-auth-nkey=${NATS_NKEY} --nats-auth-jwt=${NATS_USER_JWT} --nats-consumer-group=${CONSUMER_GROUP_MESSAGE_STORAGE} --message-db=mongo --mongo-url=${MONGO_URL} --mongo-user=${MONGO_USER} --mongo-password=${MONGO_PASSWORD} --mongo-auth 


  channel:
    image: ramank775/chatserver:${CHAT_SERVER_TAG}
    entrypoint: node
    command: /app/services/channel-ms/channel-ms.js --app-name=chanenl-ms --host=0.0.0.0 --port=4002 --new-message-topic=${TOPIC_NEW_MESSAGE} --event-store=${EVENT_STORE} --kafka-broker-list=${BROKER_LIST} --kafka-security-protocol=${KAFKA_SECURITY_PROTOCOL} --kafka-sasl-username=${KAFKA_SASL_USERNAME} --kafka-sasl-password=${KAFKA_SASL_PASSWORD} --kafka-client-id=${GROUP_CLIENT_ID:-group-1} --nats-server-list=${NATS_SERVER_LIST} --nats-auth-type=${NATS_AUTH} --nats-auth-user=${NATS_USER} --nats-auth-pass=${NATS_PASS} --nats-auth-token=${NATS_AUTH_TOKEN} --nats-auth-nkey=${NATS_NKEY} --nats-auth-jwt=${NATS_USER_JWT} --channel-db=mongo --mongo-url=${MONGO_URL} --mongo-user=${MONGO_USER} --mongo-password=${MONGO_PASSWORD} --mongo-auth

  profile:
    image: ramank775/chatserver:${CHAT_SERVER_TAG}
    entrypoint: node
    command: /app/services/profile-ms/profile-ms.js --app-name=profile-ms --host=0.0.0.0 --port=4000 --auth-provider=firebase --firebase-project-id=${FIREBASE_PROJECT_ID} --new-login-topic=${TOPIC_NEW_LOGIN} --event-store=${EVENT_STORE} --kafka-broker-list=${BROKER_LIST} --kafka-security-protocol=${KAFKA_SECURITY_PROTOCOL} --kafka-sasl-username=${KAFKA_SASL_USERNAME} --kafka-sasl-password=${KAFKA_SASL_PASSWORD} --kafka-client-id=${PROFILE_CLIENT_ID:-profile-1} --nats-server-list=${NATS_SERVER_LIST} --nats-auth-type=${NATS_AUTH} --nats-auth-user=${NATS_USER} --nats-auth-pass=${NATS_PASS} --nats-auth-token=${NATS_AUTH_TOKEN} --nats-auth-nkey=${NATS_NKEY} --nats-auth-jwt=${NATS_USER_JWT} --auth-db=mongo --profile-db=mongo --mongo-url=${MONGO_URL} --mongo-user=${MONGO_USER} --mongo-password=${MONGO_PASSWORD} --mongo-auth 

  notification:
    image: ramank775/chatserver:${CHAT_SERVER_TAG}
    volumes:
      - ${CONFIG_DIR}/firebase/service.json:/app/.service.json:ro
    entrypoint: node
    command: /app/services/notification-ms/notification-ms.js --app-name=notification-ms --new-login-topic=${TOPIC_NEW_LOGIN} --offline-message-topic=${TOPIC_OFFLINE_MESSAGE} --notification-db=mongo --mongo-url=${MONGO_URL} --mongo-user=${MONGO_USER} --mongo-password=${MONGO_PASSWORD} --mongo-auth --pn-service=firebase --firebase-admin-credential-json-path=/app/.service.json --event-store=${EVENT_STORE} --kafka-broker-list=${BROKER_LIST} --kafka-security-protocol=${KAFKA_SECURITY_PROTOCOL} --kafka-sasl-username=${KAFKA_SASL_USERNAME} --kafka-sasl-password=${KAFKA_SASL_PASSWORD} --kafka-consumer-group=${CONSUMER_GROUP_NOTIFICATION} --offline-msg-initial=${PERSISTENCE_MESSAGE_MS_INITIAL} --kafka-client-id=${NOTIFICATION_CLIENT_ID:-notification-1} --firebase-pn-ttl=${PN_TTL:-86400} --nats-server-list=${NATS_SERVER_LIST} --nats-auth-type=${NATS_AUTH} --nats-auth-user=${NATS_USER} --nats-auth-pass=${NATS_PASS} --nats-auth-token=${NATS_AUTH_TOKEN} --nats-auth-nkey=${NATS_NKEY} --nats-auth-jwt=${NATS_USER_JWT} --nats-consumer-group=${CONSUMER_GROUP_NOTIFICATION}

  media-metadata-ms:
    image: ramank775/chatserver:${CHAT_SERVER_TAG}
    entrypoint: node
    command: /app/services/media-ms/media-metadata-ms.js --app-name=media-metadat-ms --host=0.0.0.0 --port=4001 --media-metadata-db=mongo --mongo-url=${MONGO_URL} --mongo-user=${MONGO_USER} --mongo-password=${MONGO_PASSWORD} --mongo-auth --media-storage=s3 --s3-bucket-name=${S3_BUCKET_NAME} --s3-secret-access-key=${S3_SECRET_ACCESS_KEY} --s3-access-key-id=${S3_ACCESS_KEY_ID} --base-upload-dir=/dev --url-expire-time={URL_EXPIRE_TIME:-3600}
