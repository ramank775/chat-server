version: "3.9"

services:
  nginx:
    image: nginx:stable
    volumes:
      - ${CONFIG_DIR}/nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  gateway:
    image: ramank775/chatserver:${CHAT_SERVER_TAG}
    entrypoint: node
    command: /app/services/connection-gateway/gateway.js --host=0.0.0.0 --app-name=ws-gateway --gateway-name=gateway-1 --user-connection-state-topic=${TOPIC_USER_CONNECTION_STATE} --new-message-topic=${TOPIC_NEW_MESSAGE} --event-store=kafka --kafka-client-id=${GATEWAY_CLIENT_ID:-gateway-1} --kafka-consumer-group=${CONSUMER_GROUP_GATEWAY} --kafka-broker-list='${BROKER_LIST}' --kafka-security-protocol=${KAFKA_SECURITY_PROTOCOL} --kafka-sasl-username=${KAFKA_SASL_USERNAME} --kafka-sasl-password=${KAFKA_SASL_PASSWORD}

  message-delivery:
    image: ramank775/chatserver:${CHAT_SERVER_TAG}
    volumes:
      - '${CONFIG_DIR}/discovery_service/services.json:/app/discovery_service.json'
    entrypoint: node
    command: /app/services/message-delivery/message-delivery-ms.js --app-name=message-delivery --user-connection-state-topic=${TOPIC_USER_CONNECTION_STATE} --send-message-topic=${TOPIC_SEND_MESSAGE} --ack-topic=${TOPIC_ACK_MESSAGE} --offline-message-topic=${TOPIC_OFFLINE_MESSAGE} --service-discovery-path=/app/discovery_service.json --event-store=kafka --kafka-client-id=${MESSAGE_DELIVERY_CLIENT_ID:-message-delivery-1} --kafka-consumer-group=${CONSUMER_GROUP_MESSAGE_DELIVERY} --kafka-broker-list=${BROKER_LIST} --kafka-security-protocol=${KAFKA_SECURITY_PROTOCOL} --kafka-sasl-username=${KAFKA_SASL_USERNAME} --kafka-sasl-password=${KAFKA_SASL_PASSWORD} --cache-type=redis --redis-endpoint=${REDIS_ENDPOINT} --message-db=mongo --mongo-url=${MONGO_URL} --mongo-user=${MONGO_USER} --mongo-password=${MONGO_PASSWORD} --mongo-auth

  message_router:
    image: ramank775/chatserver:${CHAT_SERVER_TAG}
    entrypoint: node
    command: /app/services/message-router-ms/message-router-ms.js --app-name=message-router-1 --send-message-topic=${TOPIC_SEND_MESSAGE} --new-message-topic=${TOPIC_NEW_MESSAGE} --ack-topic=${TOPIC_ACK_MESSAGE} --group-message-topic=${TOPIC_NEW_GROUP_MS} --event-store=kafka --kafka-client-id=${MESSAGE_ROUTER_CLIENT_ID:-message-router-1} --kafka-consumer-group=${CONSUMER_GROUP_MESSAGE_ROUTER} --kafka-broker-list=${BROKER_LIST} --kafka-security-protocol=${KAFKA_SECURITY_PROTOCOL} --kafka-sasl-username=${KAFKA_SASL_USERNAME} --kafka-sasl-password=${KAFKA_SASL_PASSWORD}

  profile:
    image: ramank775/chatserver:${CHAT_SERVER_TAG}
    entrypoint: node
    command: /app/services/profile-ms/profile-ms.js --app-name=profile-ms-1 --host=0.0.0.0 --port=4000 --new-login-topic=${TOPIC_NEW_LOGIN} --auth-provider=firebase --firebase-project-id=${FIREBASE_PROJECT_ID} --auth-db=mongo --profile-db=mongo --mongo-url=${MONGO_URL} --mongo-user=${MONGO_USER} --mongo-password=${MONGO_PASSWORD} --mongo-auth  --event-store=kafka --kafka-broker-list=${BROKER_LIST} --kafka-security-protocol=${KAFKA_SECURITY_PROTOCOL} --kafka-sasl-username=${KAFKA_SASL_USERNAME} --kafka-sasl-password=${KAFKA_SASL_PASSWORD} --kafka-client-id=${PROFILE_CLIENT_ID:-profile-1}

  group:
    image: ramank775/chatserver:${CHAT_SERVER_TAG}
    entrypoint: node
    command: /app/services/group-ms/group-ms.js --app-name=group-ms-1 --host=0.0.0.0 --port=4002 --new-group-message-topic=${TOPIC_NEW_GROUP_MS} --group-db=mongo --mongo-url=${MONGO_URL} --mongo-user=${MONGO_USER} --mongo-password=${MONGO_PASSWORD} --mongo-auth --event-store=kafka --kafka-broker-list=${BROKER_LIST} --kafka-security-protocol=${KAFKA_SECURITY_PROTOCOL} --kafka-sasl-username=${KAFKA_SASL_USERNAME} --kafka-sasl-password=${KAFKA_SASL_PASSWORD} --kafka-client-id=${GROUP_CLIENT_ID:-group-1}

  group_message_router:
    image: ramank775/chatserver:${CHAT_SERVER_TAG}
    entrypoint: node
    command: /app/services/group-ms/group-message-router-ms.js --app-name=group-message-router-1 --new-group-message-topic=${TOPIC_NEW_GROUP_MS} --send-message-topic=${TOPIC_SEND_MESSAGE} --ack-topic=${TOPIC_ACK_MESSAGE} --event-store=kafka --kafka-broker-list=${BROKER_LIST} --kafka-security-protocol=${KAFKA_SECURITY_PROTOCOL} --kafka-sasl-username=${KAFKA_SASL_USERNAME} --kafka-sasl-password=${KAFKA_SASL_PASSWORD} --kafka-client-id=${GROUP_MESSAGE_ROUTER_CLIENT_ID:-group-message-router-1} --kafka-consumer-group=${CONSUMER_GROUP_GROUP_MESSAGE_ROUTER} --group-db=mongo --mongo-url=${MONGO_URL} --mongo-user=${MONGO_USER} --mongo-password=${MONGO_PASSWORD} --mongo-auth

  notification:
    image: ramank775/chatserver:${CHAT_SERVER_TAG}
    volumes:
      - ${CONFIG_DIR}/firebase/service.json:/app/.service.json:ro
    entrypoint: node
    command: /app/services/notification-ms/notification-ms.js --app-name=notification-ms-1 --new-login-topic=${TOPIC_NEW_LOGIN} --offline-message-topic=${TOPIC_OFFLINE_MESSAGE} --notification-db=mongo --mongo-url=${MONGO_URL} --mongo-user=${MONGO_USER} --mongo-password=${MONGO_PASSWORD} --mongo-auth --pn-service=firebase --firebase-admin-credential-json-path=/app/.service.json --event-store=kafka --kafka-broker-list=${BROKER_LIST} --kafka-security-protocol=${KAFKA_SECURITY_PROTOCOL} --kafka-sasl-username=${KAFKA_SASL_USERNAME} --kafka-sasl-password=${KAFKA_SASL_PASSWORD} --kafka-consumer-group=${CONSUMER_GROUP_NOTIFICATION} --offline-msg-initial=${PERSISTENCE_MESSAGE_MS_INITIAL} --kafka-client-id=${NOTIFICATION_CLIENT_ID:-notification-1} --firebase-pn-ttl=${PN_TTL:-86400}
